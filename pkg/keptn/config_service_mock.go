// Code generated by MockGen. DO NOT EDIT.
// Source: config_service.go

// Package keptn is a generated GoMock package.
package keptn

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKeptnConfigService is a mock of KeptnConfigService interface
type MockKeptnConfigService struct {
	ctrl     *gomock.Controller
	recorder *MockKeptnConfigServiceMockRecorder
}

// MockKeptnConfigServiceMockRecorder is the mock recorder for MockKeptnConfigService
type MockKeptnConfigServiceMockRecorder struct {
	mock *MockKeptnConfigService
}

// NewMockKeptnConfigService creates a new mock instance
func NewMockKeptnConfigService(ctrl *gomock.Controller) *MockKeptnConfigService {
	mock := &MockKeptnConfigService{ctrl: ctrl}
	mock.recorder = &MockKeptnConfigServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKeptnConfigService) EXPECT() *MockKeptnConfigServiceMockRecorder {
	return m.recorder
}

// GetKeptnResource mocks base method
func (m *MockKeptnConfigService) GetKeptnResource(resource string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeptnResource", resource)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeptnResource indicates an expected call of GetKeptnResource
func (mr *MockKeptnConfigServiceMockRecorder) GetKeptnResource(resource interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeptnResource", reflect.TypeOf((*MockKeptnConfigService)(nil).GetKeptnResource), resource)
}
